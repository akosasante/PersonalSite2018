@import "../assets/scss/main.scss";

$vertical-padding: 50px;
$horizontal-padding: 64px;
$main-width: 65%;
$main-margin-right: 35%;
$aside-width: 35%;

.main {
  margin: 0 auto;

  h3 {
    font-size: 3.4rem;
    line-height: 1.6;

    @include media("<=xsmall") {
      font-size: 2.8rem;
    }

    @include media(">=medium", "<large") {
      font-size: 3rem;
    }
  }

  // Setting the width and padding sizes
  @include media(">=large") {
    $main-width: 65%;
    $main-margin-right: 35%;
    $vertical-padding: 50px;
    $horizontal-padding: 8%;

    width: $main-width;
    margin-right: $main-margin-right;
    padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
  @include media(">=medium", "<large") {
    $main-width: 70%;
    $main-margin-right: 30%;
    $vertical-padding: 50px;
    $horizontal-padding: 8%;

    width: $main-width;
    margin-right: $main-margin-right;
    padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
  @include media(">xsmall", "<medium") {
    $main-width: 100%;
    $main-margin-right: 0;
    $vertical-padding: 50px;
    $horizontal-padding: 48px;

    width: $main-width;
    margin-right: $main-margin-right;
    padding: $vertical-padding $horizontal-padding 0 $horizontal-padding;
  }
  @include media("<=xsmall") {
    $main-width: 100%;
    $main-margin-right: 0;
    $vertical-padding: 50px;
    $horizontal-padding: 24px;

    width: $main-width;
    margin-right: $main-margin-right;
    padding: $vertical-padding $horizontal-padding 0 $horizontal-padding;
  }
}

.aside {
  align-self: stretch;
  margin: 0 auto;
  background: linear-gradient(168deg, #58c3e6 0%, #667eea 45%, #764ba2 100%);
  color: white;

  // Positioning on the side for
  // bigger screens
  @include media(">=medium") {
    position: fixed;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: space-between;
    right: 0;
    top: 0;
    height: 100%;

    .top {
      flex-grow: 1;
    }

    .bottom {
      width: 100%;
    }
  }

  // Positioning at the bottom for
  // smaller screens
  @include media("<medium") {
    position: relative;
    text-align: center;
    right: auto;
    top: auto;
    display: block;
    // padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
    padding: 0;
    .bottom {
      padding: $vertical-padding $horizontal-padding 0 $horizontal-padding;
    }
  }

  // Setting the width and padding sizes
  @include media(">=large") {
    $aside-width: 35%;
    $vertical-padding: 50px;
    $horizontal-padding: 64px;

    width: $aside-width;
    // padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
  @include media(">=medium", "<large") {
    $aside-width: 30%;
    $vertical-padding: 50px;
    $horizontal-padding: 48px;

    width: $aside-width;
    // padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
  @include media(">xsmall", "<medium") {
    $aside-width: 100%;
    $vertical-padding: 50px;
    $horizontal-padding: 48px;

    width: $aside-width;
    // padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
  @include media("<=xsmall") {
    $aside-width: 100%;
    $vertical-padding: 50px;
    $horizontal-padding: 24px;

    width: $aside-width;
    // padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
}

.inner-container {
  font-family: "Open Sans", sans-serif; //Reset font
  // Positioning at the bottom for
  // smaller screens
  @include media("<medium") {
    padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
  // Setting the width and padding sizes
  @include media(">=large") {
    $vertical-padding: 50px;
    $horizontal-padding: 64px;

    padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
  @include media(">=medium", "<large") {
    $vertical-padding: 50px;
    $horizontal-padding: 48px;

    padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
  @include media(">xsmall", "<medium") {
    $vertical-padding: 50px;
    $horizontal-padding: 48px;

    padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
  @include media("<=xsmall") {
    $vertical-padding: 50px;
    $horizontal-padding: 24px;

    padding: $vertical-padding $horizontal-padding $vertical-padding $horizontal-padding;
  }
}

.shape-container {
  position: absolute;
  width: 100%;
  height: 100%;
  padding: 5%;
  z-index: -10;
  @include media("<medium") {
    z-index: 1;
  }
  top: 0;
  overflow-y: hidden;

  $shape-count: 35; // number of shapes to render

  .shape {
    font-family: "Font Awesome 5 Free";
  }

  @for $i from 1 through $shape-count {
    $speed: 40 + random(10); // speed of shape animation
    $rotation: random(360); // randomize the rotational animation for each shape\
    $shape-types: $fa-var-star, $fa-var-plus, $fa-var-bolt, $fa-var-play, $fa-var-asterisk, $fa-var-sun; //font awesome codes
    $shape-colors: #ffa726, #ffeb3b, #f5f5f5, #e1bee7;
    $shape-area-width: random(10) + 100%;
    $shape-size: random(30) * 0.1rem;

    @keyframes shape-#{$i} {
      // create n(= $shape-count) animations, each with a randomized rotation start and end point, they'll all travel in a full circle tho
      0% {
        transform: translate3d(0, 0, 0) rotate(#{$rotation + 0}deg);
      }
      100% {
        transform: translate3d(0, 0, 0) rotate(#{$rotation + 360}deg);
      }
    }

    .shape--#{$i} {
      animation: shape-#{$i} #{$speed}s cubic-bezier(0.9, 1.22, 0.71, 0.01) infinite;
      width: $shape-area-width;
      height: 0;
      margin-left: $shape-size * 5;
      margin-top: $shape-size * 2;
      @include media("<medium") {
        text-align: left;
        margin-left: $shape-size * 1;
        margin-top: $i * 0.1 * 2rem;
      }
      &:after {
        content: fa-content(nth($shape-types, random(length($shape-types)))); //select a random shape (and below, colour)
        color: nth($shape-colors, random(length($shape-colors)));
        font-weight: 900;
        font-size: $shape-size;
      }
    }
  }
}
